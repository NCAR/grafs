#!/usr/bin/env python
import pandas as pd
import numpy as np
from netCDF4 import Dataset, date2num
from datetime import datetime, timedelta

def main():
    start_date = datetime(2015,5,5,10,5)
    end_date = datetime(2015,5,6,12,30)
    stations = ["NRMN", "SPEN"]
    path = "/d2/dgagne/mesonet/"
    md = MesonetRawData(start_date, end_date, stations, path)
    md.load_data()
    print md.data["NRMN"]["SRAD"]
    return


class MesonetRawData(object):
    def __init__(self, start_date, end_date, stations, path, station_info_file):
        self.start_date = start_date
        self.end_date = end_date
        self.dates = pd.DatetimeIndex(start=self.start_date, end=self.end_date,
                                      freq="5min")
        self.stations = stations
        self.data = {}
        self.path = path
        self.station_info = pd.read_csv(station_info_file)

    def load_data(self):
        def read_mesonet_day(date):
            filename = self.path + "{0:d}/{1:02d}/{2:02d}/{0:d}{1:02d}{2:02d}{3}.mts".format(
                date.year, date.month, date.day, station.lower())
            data = pd.read_table(filename, sep="[ ]{2,5}", skiprows=2, engine="python",
                                 index_col=False, 
                                 na_values=np.arange(-999,-989, 1).tolist() + ["   "])
            data.index = pd.TimeSeries(pd.Timestamp(date) + pd.TimedeltaIndex(data["TIME"], unit="m", tz="UTC"))
            return data
        all_days = np.unique(self.dates.date)
        for station in self.stations:
            station_data = pd.concat(map(read_mesonet_day, all_days))
            self.data[station] = station_data.loc[self.dates]

    def running_mean(self, variable):    
        return

if __name__ == "__main__":
    main()
