#!/usr/bin/env python
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor
from sklearn.linear_model import Lasso
from sklearn.pipeline import Pipeline
from sklearn.feature_selection import SelectKBest, f_regression

anova_filter = SelectKBest(f_regression, k=5)
config = dict(
    data_format="csv",
    data_path="/sharp/djgagne/ssef_solar_data_2016/",
    expression="site_data_SSEF_wrf-core01_arw_*.csv",
    input_columns=["Forecast_Hour",
                   "radsw", "raddn", "pwat", "cmpref", "hgtsfc", "rh850", "rh700", "rh500", "accppt",
                   "ETRC_Mean", "azimuth_Mean", "zenith_Mean"],
    site_id_column="Station_ID",
    x_name="Lon",
    y_name="Lat",
    run_date_col="Run_Date",
    output_column="CLRI_Mean",
    model_names=["Random Forest", "Linear Regression", "Gradient Boosting"],
    model_objects=[RandomForestRegressor(n_estimators=500, min_samples_split=10, max_features='sqrt', n_jobs=10),
                   Pipeline([('anova', anova_filter), ('lr', Lasso(max_iter=10000))]),
                   GradientBoostingRegressor(n_estimators=500, loss='lad', max_depth=5, max_features='sqrt',
                                             learning_rate=0.01)],
    n_folds=5,
    pred_columns=["Run_Date", "Valid_Date", "Forecast_Hour", "Station_ID", "Lon", "Lat", "Row", "Col",
                  "radsw", "SRAD_Mean", "CLRI_Mean", "ETRC_f"],
    cv_pred_file="/sharp/djgagne/cv_predictions/cv_predictions_mesonet.csv",
    ml_model_path="/sharp/djgagne/ml_models_caps/",
    test_day_interval=3,
    site_pred_file="/sharp/djgagne/site_predictions/site_predictions_mesonet_gfs_kt_site.csv",
    random_seed=5005,
    grouping_level="site",
    interp_method="weighted",
)
