#!/usr/bin/env python
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor
from sklearn.linear_model import Lasso
from sklearn.pipeline import Pipeline
from sklearn.feature_selection import SelectKBest, f_regression
from pygrafs.libs.model.linear import StepwiseLinearRegression, eval_linear_model



anova_filter = SelectKBest(f_regression, k=16)
config = dict(
    data_format="csv",
    data_path="/d2/dgagne/merged_data_mesonet/",
    expression="gfs_def_fcst.*.00.*",
    input_columns=["valid_hour_cst", "forecast_hour", "day_of_year", "sine_doy",
                   "T_f", "T_f_mean", "T_f_max", "T_f_min", "T_f_correlate",
                   "av_dswrf_sfc_f", "av_dswrf_sfc_f_mean", "av_dswrf_sfc_f_max",
                   "av_dswrf_sfc_f_min",
                   "av_dswrf_sfc_f_correlate",
                   "cloud_cover_f", "cloud_cover_f_mean", "cloud_cover_f_max", "cloud_cover_f_min",
                   "cloud_cover_f_correlate", "azimuth_f", "zenith_f", "elevation_f", "CLRI_f", "ETRC_f"],
    site_id_column="station",
    output_column="CLRI_Mean",
    #model_names=["Random Forest", "Linear Regression", "Gradient Boosting"],
    #model_objects=[RandomForestRegressor(n_estimators=500, min_samples_split=10, max_features='sqrt', n_jobs=10),
    #               Pipeline([('anova', anova_filter), ('lr', Lasso(max_iter=10000))]),
    #               GradientBoostingRegressor(n_estimators=500, loss='lad', max_depth=5, max_features='sqrt')],
    model_names=["Random Forest", "Random Forest All Features", "Random Forest Short Trees", "Linear Regression", 
                 "Gradient Boosting", "Gradient Boosting Least Squares", "Gradient Boosting Big Trees", "Gradient Boosting All Features",
                 "Gradient Boosting Slow Learning Rate"],
    model_objects=[RandomForestRegressor(n_estimators=500, min_samples_split=10, max_features='sqrt', n_jobs=10),
                   RandomForestRegressor(n_estimators=500, min_samples_split=10, max_features='auto', n_jobs=10),
                   RandomForestRegressor(n_estimators=500, max_depth=3, max_features='sqrt', n_jobs=10),
                   StepwiseLinearRegression(),
                   GradientBoostingRegressor(n_estimators=500, loss='lad', max_depth=5, max_features='sqrt'),
                   GradientBoostingRegressor(n_estimators=500, loss='ls', max_depth=5, max_features='sqrt'),
                   GradientBoostingRegressor(n_estimators=500, loss='lad', min_samples_split=10, max_features='sqrt'),
                   GradientBoostingRegressor(n_estimators=500, loss='lad', max_depth=5, max_features='auto'),
                   GradientBoostingRegressor(n_estimators=500, loss='lad', max_depth=5, max_features='auto', learning_rate=0.01)],
    n_folds=5,
    pred_columns=["run_date", "valid_date", "station", "lon", "lat", "row", "col", "forecast_hour", "valid_hour_cst",
                  "av_dswrf_sfc_f", "av_dswrf_sfc_f_mean", "ETRC_f", "CLRI_f", "azimuth_f", "zenith_f", "SRAD_Mean", "CLRI_Mean"],
    cv_pred_file="/d2/dgagne/cv_predictions/cv_predictions_mesonet_big.csv",
    ml_model_path="/d2/dgagne/ml_models_sw/",
    test_day_interval=3,
    site_pred_file="/d2/dgagne/site_predictions/site_predictions_mesonet_gfs_kt_site.csv",
    random_seed=5005,
    grouping_level="site",
)
