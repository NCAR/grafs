#!/usr/bin/env python
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor
from sklearn.linear_model import Lasso
from sklearn.pipeline import Pipeline
from sklearn.feature_selection import SelectKBest, f_regression

anova_filter = SelectKBest(f_regression, k=10)
config = dict(
    data_format="csv",
    data_path="/d2/dgagne/merged_data_mesonet/",
    expression="gfs_def_fcst.*.00.*",
    input_columns=["valid_hour_cst", "forecast_hour", "day_of_year", "sine_doy",
                   "T_f", "T_f_mean", "T_f_median", "T_f_max", "T_f_min", "T_f_correlate", "T_f_gradient",
                   "av_dswrf_sfc_f", "av_dswrf_sfc_f_mean", "av_dswrf_sfc_f_median", "av_dswrf_sfc_f_max",
                   "av_dswrf_sfc_f_min",
                   "av_dswrf_sfc_f_correlate", "av_dswrf_sfc_f_gradient",
                   "cloud_cover_f", "cloud_cover_f_mean", "cloud_cover_f_mean", "cloud_cover_f_gradient",
                   "cloud_cover_f_correlate"],
    site_id_column="station",
    output_column="SRAD_Mean",
    model_names=["Random Forest", "Linear Regression", "Gradient Boosting"],
    model_objects=[RandomForestRegressor(n_estimators=500, max_depth=8, max_features='sqrt', n_jobs=10),
                   Pipeline([('anova', anova_filter), ('lr', Lasso())]),
                   GradientBoostingRegressor(n_estimators=500, loss='lad', max_depth=8, max_features='sqrt')],
    n_folds=5,
    pred_columns=["run_date", "valid_date", "station", "lon", "lat", "row", "col", "forecast_hour", "valid_hour_cst",
                  "av_dswrf_sfc_f", "SRAD_Mean"],
    cv_pred_file="/d2/dgagne/cv_predictions/cv_predictions_mesonet.csv",
    ml_model_path="/d2/dgagne/ml_models_sw/",
    test_day_interval=3,
    site_pred_file="/d2/dgagne/site_predictions/site_predictions_mesonet_gfs_ja_site.csv",
    random_seed=5005,
    grouping_level="site",
)
